services:
  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - toolkit_service
      - mongodb
      - backend

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - mongodb

  toolkit_service:
    build:
      context: .
      dockerfile: toolkit/Dockerfile
    command: ["python3","-m","uvicorn", "toolkit-service:app", "--host", "0.0.0.0", "--port", "5000", "--reload", "--log-level", "debug"]
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - mongodb
  
  toolkit_worker:
    build:
      context: .
      dockerfile: toolkit/Dockerfile
    command: ["python3", "-m", "celery", "-A", "celery_worker.celery_app", "worker", "--loglevel=debug"]
    ports:
      - "6000:6000"
    networks:
      - app-network
    depends_on:
      - redis
      - toolkit_service

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
